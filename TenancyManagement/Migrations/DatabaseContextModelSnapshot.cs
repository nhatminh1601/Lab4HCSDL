// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenancyManagement.Models;

namespace TenancyManagement.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TenancyManagement.Models.BanKyKet", b =>
                {
                    b.Property<int>("ContractId");

                    b.Property<int>("CustomerId");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("ExtensionDate");

                    b.Property<int>("Status");

                    b.HasKey("ContractId", "CustomerId", "EmployeeId");

                    b.HasIndex("ContractId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BanKyKet");
                });

            modelBuilder.Entity("TenancyManagement.Models.ChiNhanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("District");

                    b.Property<string>("Fax");

                    b.Property<string>("Phone");

                    b.Property<string>("Region");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("ChiNhanh");
                });

            modelBuilder.Entity("TenancyManagement.Models.ChuNha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("ChuNha");
                });

            modelBuilder.Entity("TenancyManagement.Models.HopDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDay");

                    b.Property<int>("HomeId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDay");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("TenancyManagement.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("BranchId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("TenancyManagement.Models.LichXemNha", b =>
                {
                    b.Property<int>("CustomerId");

                    b.Property<int>("HomeId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateView");

                    b.HasKey("CustomerId", "HomeId");

                    b.HasIndex("HomeId");

                    b.ToTable("LichXemNha");
                });

            modelBuilder.Entity("TenancyManagement.Models.LoaiNha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("LoaiNha");
                });

            modelBuilder.Entity("TenancyManagement.Models.Nha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryHomeId");

                    b.Property<string>("City");

                    b.Property<string>("District");

                    b.Property<int>("HouseOwnerId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Region");

                    b.Property<int>("Room");

                    b.Property<int>("Street");

                    b.HasKey("Id");

                    b.HasIndex("CategoryHomeId");

                    b.HasIndex("HouseOwnerId");

                    b.ToTable("Nha");
                });

            modelBuilder.Entity("TenancyManagement.Models.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birthday");

                    b.Property<byte>("Genden");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("TenancyManagement.Models.PhanCong", b =>
                {
                    b.Property<int>("BranchId");

                    b.Property<int>("EmployeeId");

                    b.Property<byte>("Status");

                    b.HasKey("BranchId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhanCong");
                });

            modelBuilder.Entity("TenancyManagement.Models.QuanLy", b =>
                {
                    b.Property<int>("BranchId");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("HomeId");

                    b.Property<byte>("Status");

                    b.HasKey("BranchId", "EmployeeId", "HomeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HomeId");

                    b.ToTable("QuanLy");
                });

            modelBuilder.Entity("TenancyManagement.Models.YeuCau", b =>
                {
                    b.Property<int>("CategoryHomeId");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Require");

                    b.HasKey("CategoryHomeId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("YeuCau");
                });

            modelBuilder.Entity("TenancyManagement.Models.BanKyKet", b =>
                {
                    b.HasOne("TenancyManagement.Models.HopDong", "Contract")
                        .WithOne("contractDetail")
                        .HasForeignKey("TenancyManagement.Models.BanKyKet", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.KhachHang", "Customer")
                        .WithMany("contractDetail")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.NhanVien", "Employee")
                        .WithMany("contractDetail")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.HopDong", b =>
                {
                    b.HasOne("TenancyManagement.Models.Nha", "Home")
                        .WithMany()
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.KhachHang", b =>
                {
                    b.HasOne("TenancyManagement.Models.ChiNhanh", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.LichXemNha", b =>
                {
                    b.HasOne("TenancyManagement.Models.KhachHang", "Customer")
                        .WithMany("ScheduleHome")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.Nha", "Home")
                        .WithMany("ScheduleHome")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.Nha", b =>
                {
                    b.HasOne("TenancyManagement.Models.LoaiNha", "CategoryHome")
                        .WithMany()
                        .HasForeignKey("CategoryHomeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.ChuNha", "HouseOwner")
                        .WithMany()
                        .HasForeignKey("HouseOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.PhanCong", b =>
                {
                    b.HasOne("TenancyManagement.Models.ChiNhanh", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.NhanVien", "Employees")
                        .WithMany("divisions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.QuanLy", b =>
                {
                    b.HasOne("TenancyManagement.Models.ChiNhanh", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.NhanVien", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.Nha", "Home")
                        .WithMany()
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TenancyManagement.Models.YeuCau", b =>
                {
                    b.HasOne("TenancyManagement.Models.LoaiNha", "CategoryHome")
                        .WithMany()
                        .HasForeignKey("CategoryHomeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TenancyManagement.Models.KhachHang", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
